const
  styles  = require('../lib/styles')
, { cs }  = require('./make-keyword-regex')
, rbrace  = /[\(\)]/g
, sbrace  = /[\[\]]/g
, cbrace  = /[\{\}]/g
, number  = /-?\d+(?:\.\d+)?(?:e-?\d+)?/g
, string  = /('[^']*')|("[^"]*")/g
, comment = /#[^\n]/g
, words   = [
  'DEF'
, 'ELIF'
, 'ELSE'
, 'Ellipsis'
, 'IF'
, 'NotImplemented'
, '__debug__'
, '__import__'
, 'abs'
, 'all'
, 'and'
, 'any'
, 'as'
, 'assert'
, 'bin'
, 'bool'
, 'break'
, 'by'
, 'bytearray'
, 'callable'
, 'cdef'
, 'chr'
, 'cimport'
, 'class'
, 'classmethod'
, 'compile'
, 'complex'
, 'continue'
, 'cpdef'
, 'ctypedef'
, 'def'
, 'del'
, 'delattr'
, 'dict'
, 'dir'
, 'divmod'
, 'elif'
, 'else'
, 'enum'
, 'enumerate'
, 'eval'
, 'except'
, 'exec'
, 'extern'
, 'filter'
, 'finally'
, 'float'
, 'for'
, 'format'
, 'from'
, 'frozenset'
, 'getattr'
, 'gil'
, 'global'
, 'globals'
, 'hasattr'
, 'hash'
, 'help'
, 'hex'
, 'id'
, 'if'
, 'import'
, 'in'
, 'include'
, 'input'
, 'int'
, 'is'
, 'isinstance'
, 'issubclass'
, 'iter'
, 'lambda'
, 'len'
, 'list'
, 'locals'
, 'map'
, 'max'
, 'memoryview'
, 'min'
, 'next'
, 'nogil'
, 'not'
, 'object'
, 'oct'
, 'open'
, 'or'
, 'ord'
, 'pass'
, 'pow'
, 'print'
, 'property'
, 'public'
, 'raise'
, 'range'
, 'readonly'
, 'repr'
, 'return'
, 'reversed'
, 'round'
, 'set'
, 'setattr'
, 'slice'
, 'sorted'
, 'staticmethod'
, 'str'
, 'struct'
, 'sum'
, 'super'
, 'try'
, 'tuple'
, 'type'
, 'union'
, 'vars'
, 'while'
, 'with'
, 'yield'
, 'zip'
]
, keyword = cs(words)

exports.highlight = q => {
  q.wrap(rbrace  , styles.brightCyan)
  q.wrap(sbrace  , styles.brightYellow)
  q.wrap(cbrace  , styles.brightGreen)
  q.wrap(number  , styles.brightMagenta)
  q.wrap(keyword , styles.brightBlue)
  q.wrap(comment , styles.grey)
  q.wrap(string  , styles.red)
}

exports.test = file => /\.py$/.test(file)
