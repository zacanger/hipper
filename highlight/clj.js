const
  styles  = require('../lib/styles')
, makeRe  = require('./make-keyword-regex').caseSensitive
, rbrace  = /[()]/g
, sbrace  = /[\[\]]/g
, cbrace  = /[\{\}]/g
, hash    = /#/g
, number  = /-?\d+(?:\.\d+)?(?:e-?\d+)?/g
, string  = /('[^']*')|("[^"]*")/g
, comment = /;[^\n]/g
, qmark   = /\?/g
, words   = [
  "dec'"
, "inc'"
, 'ArrayChunk'
, 'EMPTY-NODE'
, 'Vec'
, 'VecNode'
, 'VecSeq'
, 'accessor'
, 'aclone'
, 'add-classpath'
, 'add-watch'
, 'agent'
, 'agent-error'
, 'agent-errors'
, 'aget'
, 'alength'
, 'alias'
, 'all-ns'
, 'allow-unresolved-vars'
, 'alter'
, 'alter-meta!'
, 'alter-var-root'
, 'amap'
, 'ancestors'
, 'and'
, 'apply'
, 'areduce'
, 'array-map'
, 'as->'
, 'aset'
, 'aset-boolean'
, 'aset-byte'
, 'aset-char'
, 'aset-double'
, 'aset-float'
, 'aset-int'
, 'aset-long'
, 'aset-short'
, 'assert'
, 'assoc!'
, 'assoc'
, 'assoc-in'
, 'associative?'
, 'atom'
, 'await'
, 'await-for'
, 'await1'
, 'bases'
, 'bean'
, 'bigdec'
, 'bigint'
, 'biginteger'
, 'binding'
, 'bit-and'
, 'bit-and-not'
, 'bit-clear'
, 'bit-flip'
, 'bit-not'
, 'bit-or'
, 'bit-set'
, 'bit-shift-left'
, 'bit-shift-right'
, 'bit-test'
, 'bit-xor'
, 'boolean'
, 'boolean-array'
, 'booleans'
, 'bound-fn'
, 'bound?'
, 'butlast'
, 'byte'
, 'byte-array'
, 'bytes'
, 'cache-protocol-fn'
, 'case'
, 'cast'
, 'cat'
, 'catch'
, 'char'
, 'char-array'
, 'char-escape-string'
, 'char-name-string'
, 'char?'
, 'chars'
, 'chunk'
, 'chunk-append'
, 'chunk-buffer'
, 'chunk-cons'
, 'chunk-first'
, 'chunk-next'
, 'chunk-rest'
, 'chunked-seq?'
, 'class'
, 'class?'
, 'clear-agent-errors'
, 'clojure-version'
, 'coll?'
, 'command-line-args'
, 'comment'
, 'commute'
, 'comp'
, 'comparator'
, 'compare'
, 'compare-and-set!'
, 'compile'
, 'compile-files'
, 'compile-path'
, 'compiler-options'
, 'complement'
, 'completing'
, 'concat'
, 'cond'
, 'cond->'
, 'cond->>'
, 'condp'
, 'conj!'
, 'conj'
, 'cons'
, 'constantly'
, 'construct-proxy'
, 'contains?'
, 'count'
, 'counted?'
, 'create-ns'
, 'create-struct'
, 'cycle'
, 'data-readers'
, 'dec'
, 'decimal?'
, 'declare'
, 'dedupe'
, 'def'
, 'def-'
, 'defalias'
, 'default-data-reader-fn'
, 'default-data-readers'
, 'defhinted'
, 'definline'
, 'definterface'
, 'defmacro'
, 'defmacro-'
, 'defmethod'
, 'defmulti'
, 'defn'
, 'defn-'
, 'defn-memo'
, 'defnk'
, 'defonce'
, 'defonce-'
, 'defproject'
, 'defprotocol'
, 'defrecord'
, 'defstruct'
, 'deftest'
, 'deftrace'
, 'deftype'
, 'defunbound'
, 'defunbound-'
, 'defvar'
, 'defvar-'
, 'delay'
, 'delay?'
, 'deliver'
, 'denominator'
, 'deref'
, 'derive'
, 'descendants'
, 'destructure'
, 'disj!'
, 'disj'
, 'dissoc!'
, 'dissoc'
, 'distinct'
, 'distinct?'
, 'do'
, 'doall'
, 'dorun'
, 'doseq'
, 'dosync'
, 'dotimes'
, 'doto'
, 'dotrace'
, 'double'
, 'double-array'
, 'doubles'
, 'drop'
, 'drop-last'
, 'drop-while'
, 'e'
, 'eduction'
, 'empty'
, 'empty?'
, 'ensure'
, 'enumeration-seq'
, 'err'
, 'error-handler'
, 'error-mode'
, 'eval'
, 'even?'
, 'every-pred'
, 'every?'
, 'ex-data'
, 'ex-info'
, 'extend'
, 'extend-protocol'
, 'extend-type'
, 'extenders'
, 'extends?'
, 'false'
, 'false?'
, 'ffirst'
, 'file'
, 'file-seq'
, 'filter'
, 'filterv'
, 'finally'
, 'find'
, 'find-keyword'
, 'find-ns'
, 'find-protocol-impl'
, 'find-protocol-method'
, 'find-var'
, 'first'
, 'flatten'
, 'float'
, 'float-array'
, 'float?'
, 'floats'
, 'flush'
, 'flush-on-newline'
, 'fn'
, 'fn-loader'
, 'fn?'
, 'fnext'
, 'fnil'
, 'for'
, 'force'
, 'format'
, 'frequencies'
, 'future'
, 'future-call'
, 'future-cancel'
, 'future-cancelled?'
, 'future-done?'
, 'future?'
, 'gen-and-load-class'
, 'gen-and-save-class'
, 'gen-class'
, 'gen-interface'
, 'gensym'
, 'get'
, 'get-in'
, 'get-method'
, 'get-proxy-class'
, 'get-thread-bindings'
, 'get-validator'
, 'group-by'
, 'handle'
, 'handler-case'
, 'hash'
, 'hash-combine'
, 'hash-map'
, 'hash-set'
, 'identical?'
, 'identity'
, 'if'
, 'if-let'
, 'if-not'
, 'ifn?'
, 'import'
, 'in'
, 'in-ns'
, 'inc'
, 'init-proxy'
, 'instance?'
, 'int'
, 'int-array'
, 'integer?'
, 'interleave'
, 'intern'
, 'interpose'
, 'into'
, 'into-array'
, 'ints'
, 'io!'
, 'isa?'
, 'iterate'
, 'iterator-seq'
, 'juxt'
, 'keep'
, 'keep-indexed'
, 'key'
, 'keys'
, 'keyword'
, 'keyword?'
, 'last'
, 'lazy-cat'
, 'lazy-seq'
, 'let'
, 'letfn'
, 'line-seq'
, 'list'
, 'list?'
, 'load'
, 'load-file'
, 'load-reader'
, 'load-string'
, 'loaded-libs'
, 'locking'
, 'long'
, 'long-array'
, 'longs'
, 'loop'
, 'macroexpand'
, 'macroexpand-1'
, 'make-array'
, 'make-hierarchy'
, 'map'
, 'map-indexed'
, 'map?'
, 'mapcat'
, 'mapv'
, 'math-context'
, 'max'
, 'max-key'
, 'memfn'
, 'memoize'
, 'merge'
, 'merge-with'
, 'meta'
, 'method-sig'
, 'methods'
, 'min'
, 'min-key'
, 'mod'
, 'munge'
, 'name'
, 'namespace'
, 'namespace-munge'
, 'neg?'
, 'newline'
, 'next'
, 'nfirst'
, 'nil'
, 'nil?'
, 'nnext'
, 'not'
, 'not-any?'
, 'not-empty'
, 'not-every?'
, 'not='
, 'ns'
, 'ns-aliases'
, 'ns-imports'
, 'ns-interns'
, 'ns-map'
, 'ns-name'
, 'ns-publics'
, 'ns-refers'
, 'ns-resolve'
, 'ns-unalias'
, 'ns-unmap'
, 'nth'
, 'nthnext'
, 'nthrest'
, 'num'
, 'number?'
, 'numerator'
, 'object-array'
, 'odd?'
, 'or'
, 'out'
, 'parents'
, 'partial'
, 'partition'
, 'partition-all'
, 'partition-by'
, 'pcalls'
, 'peek'
, 'persistent!'
, 'pmap'
, 'pop!'
, 'pop'
, 'pop-thread-bindings'
, 'pos?'
, 'pr'
, 'pr-str'
, 'prefer-method'
, 'prefers'
, 'primitives-classnames'
, 'print'
, 'print-ctor'
, 'print-dup'
, 'print-length'
, 'print-level'
, 'print-meta'
, 'print-method'
, 'print-readably'
, 'print-simple'
, 'print-str'
, 'printf'
, 'println'
, 'println-str'
, 'prn'
, 'prn-str'
, 'promise'
, 'proxy'
, 'proxy-call-with-super'
, 'proxy-mappings'
, 'proxy-name'
, 'proxy-super'
, 'push-thread-bindings'
, 'pvalues'
, 'quot'
, 'rand'
, 'rand-int'
, 'rand-nth'
, 'random-sample'
, 'range'
, 'ratio?'
, 'rational?'
, 'rationalize'
, 're-find'
, 're-groups'
, 're-matcher'
, 're-matches'
, 're-pattern'
, 're-seq'
, 'read'
, 'read-eval'
, 'read-line'
, 'read-string'
, 'realized?'
, 'recur'
, 'reduce'
, 'reduce-kv'
, 'reduced'
, 'reduced?'
, 'reductions'
, 'ref'
, 'ref-history-count'
, 'ref-max-history'
, 'ref-min-history'
, 'ref-set'
, 'refer'
, 'refer-clojure'
, 'reify'
, 'release-pending-sends'
, 'rem'
, 'remove'
, 'remove-all-methods'
, 'remove-method'
, 'remove-ns'
, 'remove-watch'
, 'repeat'
, 'repeatedly'
, 'replace'
, 'replicate'
, 'require'
, 'reset!'
, 'reset-meta!'
, 'reset-methods'
, 'resolve'
, 'rest'
, 'restart-agent'
, 'resultset-seq'
, 'reverse'
, 'reversible?'
, 'rseq'
, 'rsubseq'
, 'satisfies?'
, 'second'
, 'select-keys'
, 'send'
, 'send-off'
, 'send-via'
, 'seq'
, 'seq?'
, 'seque'
, 'sequence'
, 'sequential?'
, 'set'
, 'set-agent-send-executor!'
, 'set-agent-send-off-executor!'
, 'set-error-handler!'
, 'set-error-mode!'
, 'set-validator!'
, 'set?'
, 'short'
, 'short-array'
, 'shorts'
, 'shuffle'
, 'shutdown-agents'
, 'slice'
, 'slurp'
, 'some'
, 'some->'
, 'some->>'
, 'some-fn'
, 'sort'
, 'sort-by'
, 'sorted-map'
, 'sorted-map-by'
, 'sorted-set'
, 'sorted-set-by'
, 'sorted?'
, 'source-path'
, 'special-symbol?'
, 'spit'
, 'split-at'
, 'split-with'
, 'str'
, 'string?'
, 'struct'
, 'struct-map'
, 'subs'
, 'subseq'
, 'subvec'
, 'supers'
, 'swap!'
, 'symbol'
, 'symbol?'
, 'sync'
, 'take'
, 'take-last'
, 'take-nth'
, 'take-while'
, 'test'
, 'testing'
, 'the-ns'
, 'thread-bound?'
, 'throw'
, 'time'
, 'to-array'
, 'to-array-2d'
, 'trampoline'
, 'transduce'
, 'transient'
, 'tree-seq'
, 'true'
, 'true?'
, 'try'
, 'type'
, 'unchecked-add'
, 'unchecked-add-int'
, 'unchecked-byte'
, 'unchecked-char'
, 'unchecked-dec'
, 'unchecked-dec-int'
, 'unchecked-divide-int'
, 'unchecked-double'
, 'unchecked-float'
, 'unchecked-inc'
, 'unchecked-inc-int'
, 'unchecked-int'
, 'unchecked-long'
, 'unchecked-math'
, 'unchecked-multiply'
, 'unchecked-multiply-int'
, 'unchecked-negate'
, 'unchecked-negate-int'
, 'unchecked-remainder-int'
, 'unchecked-short'
, 'unchecked-subtract'
, 'unchecked-subtract-int'
, 'underive'
, 'unimport'
, 'unquote'
, 'unquote-splicing'
, 'update'
, 'update-in'
, 'update-proxy'
, 'use'
, 'use-context-classloader'
, 'val'
, 'vals'
, 'var-get'
, 'var-set'
, 'var?'
, 'vary-meta'
, 'vec'
, 'vector'
, 'vector-of'
, 'vector?'
, 'verbose-defrecords'
, 'volatile!'
, 'volatile?'
, 'vreset!'
, 'vswap!'
, 'warn-on-reflection'
, 'when'
, 'when-first'
, 'when-let'
, 'when-not'
, 'while'
, 'with-bindings'
, 'with-in-str'
, 'with-loading-context'
, 'with-local-vars'
, 'with-meta'
, 'with-open'
, 'with-out-str'
, 'with-precision'
, 'with-redefs'
, 'with-redefs-fn'
, 'xml-seq'
, 'zero?'
, 'zipmap'
]
, keyword = makeRe(words)

exports.highlight = q => {
  q.wrap(rbrace  , styles.brightYellow)
  q.wrap(sbrace  , styles.yellow)
  q.wrap(cbrace  , styles.green)
  q.wrap(qmark   , styles.brightCyan)
  q.wrap(hash    , styles.brightCyan)
  q.wrap(number  , styles.brightMagenta)
  q.wrap(keyword , styles.brightBlue)
  q.wrap(comment , styles.grey)
  q.wrap(string  , styles.red)
}

exports.test = file => /\.(clj|cljs)$/.test(file)
