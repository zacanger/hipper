// Note: this is for multiple C-like langs. See last line.
const
  styles  = require('../lib/styles')
, { cs }  = require('./make-keyword-regex')
, rbrace  = /[\(\)]/g
, sbrace  = /[\[\]]/g
, cbrace  = /[\{\}]/g
, number  = /-?\d+(?:\.\d+)?(?:e-?\d+)?/g
, string  = /('[^']*')|("[^"]*")|(`[^`]*`)/g
, comment = /\/\/[^\n]*/g
, words   = [
  'Action'
, 'Boolean'
, 'Byte'
, 'Char'
, 'Character'
, 'DateTime'
, 'DateTimeOffset'
, 'Decimal'
, 'Double'
, 'Float'
, 'Func'
, 'Guid'
, 'Int16'
, 'Int32'
, 'Int64'
, 'Integer'
, 'Long'
, 'Number'
, 'Object'
, 'SByte'
, 'Short'
, 'Single'
, 'String'
, 'StringBuffer'
, 'StringBuilder'
, 'Task'
, 'This'
, 'TimeSpan'
, 'UInt16'
, 'UInt32'
, 'UInt64'
, 'Void'
, '_Bool'
, '_Complex'
, 'absracts'
, 'abstract'
, 'add'
, 'alias'
, 'alignas'
, 'alignof'
, 'annotation'
, 'as'
, 'ascending'
, 'asm'
, 'assert'
, 'assume'
, 'async'
, 'auto'
, 'base'
, 'bool'
, 'boolean'
, 'break'
, 'by'
, 'byte'
, 'case'
, 'catch'
, 'char'
, 'checked'
, 'class'
, 'companion'
, 'const'
, 'const_cast'
, 'constexpr'
, 'constructor'
, 'continue'
, 'crossinline'
, 'data'
, 'decltype'
, 'def'
, 'default'
, 'define'
, 'delegate'
, 'delete'
, 'descending'
, 'do'
, 'double'
, 'double_t'
, 'dynamic'
, 'dynamic_case'
, 'else'
, 'endif'
, 'enum'
, 'error'
, 'event'
, 'explicit'
, 'extends'
, 'extern'
, 'external'
, 'field'
, 'file'
, 'final'
, 'finally'
, 'fixed'
, 'float'
, 'float_t'
, 'for'
, 'forSome'
, 'foreach'
, 'friend'
, 'from'
, 'fun'
, 'get'
, 'global'
, 'goto'
, 'group'
, 'if'
, 'ifdef'
, 'ifndef'
, 'implements'
, 'implicit'
, 'import'
, 'in'
, 'include'
, 'infix'
, 'init'
, 'inline'
, 'inner'
, 'instanceof'
, 'int'
, 'int16_t'
, 'int64_t'
, 'int8_t'
, 'interface'
, 'internal'
, 'intmax_t'
, 'into'
, 'intptr_t'
, 'is'
, 'join'
, 'lateinit'
, 'lazy'
, 'let'
, 'lock'
, 'long'
, 'match'
, 'mutable'
, 'namespace'
, 'native'
, 'new '
, 'new'
, 'noexcept'
, 'noinline'
, 'null'
, 'nullptr'
, 'object'
, 'open'
, 'operator'
, 'orderby'
, 'out'
, 'override'
, 'package'
, 'param'
, 'params'
, 'partial'
, 'print'
, 'printf'
, 'println'
, 'private'
, 'property'
, 'protected'
, 'ptrdiff_t'
, 'public'
, 'readBoolean'
, 'readByte'
, 'readChar'
, 'readDouble'
, 'readFloat'
, 'readInt'
, 'readLine'
, 'readLong'
, 'readShort'
, 'readonly'
, 'receiver'
, 'ref'
, 'register'
, 'reified'
, 'reinterpret_cast'
, 'remove'
, 'require'
, 'return'
, 'sbyte'
, 'sealed'
, 'select'
, 'set'
, 'short'
, 'signed'
, 'size_t'
, 'sizeof'
, 'sparam'
, 'sprintf'
, 'stackalloc'
, 'static'
, 'static_assert'
, 'static_cast'
, 'strictfp'
, 'struct'
, 'super'
, 'switch'
, 'synchronized'
, 'tailrec'
, 'template'
, 'this'
, 'thread_local'
, 'throw'
, 'throws'
, 'trait'
, 'transient'
, 'try'
, 'typealias'
, 'typedef'
, 'typeid'
, 'typename'
, 'typeof'
, 'uint'
, 'uint16_t'
, 'uint32_t'
, 'uint64_t'
, 'uint8_t'
, 'uintmax_t'
, 'uintptr_t'
, 'ulong'
, 'unchecked'
, 'undef'
, 'union'
, 'unsafe'
, 'unsigned'
, 'ushort'
, 'using'
, 'value'
, 'var'
, 'vararg'
, 'virtual'
, 'void'
, 'volatile'
, 'wchar_t'
, 'when'
, 'where'
, 'while'
, 'yield'
]
, keyword = cs(words)

exports.highlight = q => {
  q.wrap(rbrace  , styles.brightCyan)
  q.wrap(sbrace  , styles.brightYellow)
  q.wrap(cbrace  , styles.brightGreen)
  q.wrap(number  , styles.brightMagenta)
  q.wrap(keyword , styles.brightBlue)
  q.wrap(comment , styles.grey)
  q.wrap(string  , styles.red)
}

exports.test = file => /\.(kts|kt|java|scala|sc|cs|c|cpp|h)$/.test(file)
